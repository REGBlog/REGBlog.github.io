<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Finance on REG Blog</title>
    <link>https://regblog.github.io/categories/finance/</link>
    <description>Recent content in Finance on REG Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 13 Mar 2024 08:47:07 -0400</lastBuildDate>
    <atom:link href="https://regblog.github.io/categories/finance/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Savings Account Calculator</title>
      <link>https://regblog.github.io/stem/savings-account-calculator/</link>
      <pubDate>Wed, 13 Mar 2024 08:47:07 -0400</pubDate>
      <guid>https://regblog.github.io/stem/savings-account-calculator/</guid>
      <description>&lt;div&gt;&#xA;    &lt;label for=&#34;salary&#34;&gt;Salary (yearly):&lt;/label&gt;&#xA;    &lt;input type=&#34;number&#34; id=&#34;salary&#34; value=&#34;103000&#34;&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div&gt;&#xA;    &lt;label for=&#34;savingsPercentage&#34;&gt;Savings Percentage (%):&lt;/label&gt;&#xA;    &lt;input type=&#34;number&#34; id=&#34;savingsPercentage&#34; value=&#34;20&#34;&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div&gt;&#xA;    &lt;label for=&#34;apy&#34;&gt;APY (%):&lt;/label&gt;&#xA;    &lt;input type=&#34;number&#34; id=&#34;apy&#34; value=&#34;4.35&#34;&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div&gt;&#xA;    &lt;label for=&#34;years&#34;&gt;Years:&lt;/label&gt;&#xA;    &lt;input type=&#34;number&#34; id=&#34;years&#34; value=&#34;30&#34;&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div&gt;&#xA;    &lt;label for=&#34;raisePercentage&#34;&gt;Annual Raise (%):&lt;/label&gt;&#xA;    &lt;input type=&#34;number&#34; id=&#34;raisePercentage&#34; value=&#34;3&#34;&gt;&#xA;  &lt;/div&gt;  &#xA;  &lt;button onclick=&#34;calculateAndGraph()&#34;&gt;Calculate and Graph&lt;/button&gt;&#xA;  &lt;canvas id=&#34;savingsGraph&#34; width=&#34;400&#34; height=&#34;200&#34;&gt;&lt;/canvas&gt;&#xA;  &#xA;  &lt;script&gt;&#xA;    var chart;&#xA;    function calculateAndGraph() {&#xA;        var yearlySalary = parseFloat(document.getElementById(&#39;salary&#39;).value);&#xA;        var savingsPercentage = parseFloat(document.getElementById(&#39;savingsPercentage&#39;).value) / 100;&#xA;        var apy = parseFloat(document.getElementById(&#39;apy&#39;).value) / 100;&#xA;        var years = parseInt(document.getElementById(&#39;years&#39;).value);&#xA;        var raisePercentage = parseFloat(document.getElementById(&#39;raisePercentage&#39;).value) / 100;&#xA;      &#xA;        var monthlySalary = yearlySalary / 12;&#xA;        var monthlyContribution = monthlySalary * savingsPercentage;&#xA;        var monthlyContributionWithRaise = monthlyContribution; &#xA;        var monthlyInterestRate = apy / 12;&#xA;        var months = years * 12;&#xA;        var balance = 0;&#xA;        var balanceWithRaise = 0;&#xA;        var data = [];&#xA;        var dataWithRaise = [];&#xA;      &#xA;        for (var i = 0; i &lt;= months; i++) {&#xA;          if (i % 12 === 0 &amp;&amp; i &gt; 0) { &#xA;            monthlySalary *= (1 + raisePercentage);&#xA;            monthlyContributionWithRaise = monthlySalary * savingsPercentage;&#xA;          }&#xA;      &#xA;          balance += monthlyContribution;&#xA;          balance *= (1 + monthlyInterestRate);&#xA;          data.push({x: i / 12, y: balance});&#xA;      &#xA;          balanceWithRaise += monthlyContributionWithRaise;&#xA;          balanceWithRaise *= (1 + monthlyInterestRate);&#xA;          dataWithRaise.push({x: i / 12, y: balanceWithRaise});&#xA;        }&#xA;      &#xA;        &#xA;        if (chart) {&#xA;          chart.destroy();&#xA;        }&#xA;      &#xA;        var ctx = document.getElementById(&#39;savingsGraph&#39;).getContext(&#39;2d&#39;);&#xA;        chart = new Chart(ctx, {&#xA;          type: &#39;line&#39;,&#xA;          data: {&#xA;            datasets: [{&#xA;              label: &#39;Savings Over Time&#39;,&#xA;              data: data,&#xA;              fill: false,&#xA;              borderColor: &#39;rgb(75, 192, 192)&#39;,&#xA;              tension: 0.1&#xA;            }, {&#xA;              label: &#39;Savings with Annual Raise&#39;,&#xA;              data: dataWithRaise,&#xA;              fill: false,&#xA;              borderColor: &#39;rgb(255, 99, 132)&#39;,&#xA;              tension: 0.1&#xA;            }]&#xA;          },&#xA;          options: {&#xA;            scales: {&#xA;              x: {&#xA;                type: &#39;linear&#39;,&#xA;                title: {&#xA;                  display: true,&#xA;                  text: &#39;Years&#39;&#xA;                }&#xA;              },&#xA;              y: {&#xA;                title: {&#xA;                  display: true,&#xA;                  text: &#39;Balance ($)&#39;&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        });&#xA;      }      &#xA;  &lt;/script&gt;&#xA;  &lt;script src=&#34;https://cdn.jsdelivr.net/npm/chart.js&#34;&gt;&lt;/script&gt;</description>
    </item>
  </channel>
</rss>
